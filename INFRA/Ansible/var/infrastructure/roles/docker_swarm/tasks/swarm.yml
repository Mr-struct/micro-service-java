---

- name: SDK Python | Install prerequisites
  apt: 
    name: 
      - python-pip
      - python3-pip
    state: latest
    update_cache: yes
  register: result

- name: Debug | Install prerequisites SDK
  debug: var=result verbosity=1

- name: Docker SDK | install docker (python)
  pip:
    name: docker
  register: result

- name: Debug | SDK - install docker (python)
  debug: var=result verbosity=1

- name: Docker | Check for Swarm
  docker_swarm_info:
    nodes: yes
  register: swarm_info
  run_once: true
  ignore_errors: yes

- name: Debug | Docker - Check for Swarm
  debug: var=swarm_info verbosity=1

- name: Inform about basic flags
  debug:
    msg: |
      Was able to talk to docker daemon: {{ swarm_info.can_talk_to_docker }}
      Docker in Swarm mode: {{ swarm_info.docker_swarm_active }}
      This is a Manager node: {{ swarm_info.docker_swarm_manager }}

- name: Docker | set Swarm on
  docker_swarm:
    state: present
    advertise_addr: "{{ swarm_manager_ip }}"
    debug: yes
  register: swarm_info
  run_once: true
  when: swarm_info.docker_swarm_active == false or swarm_info.docker_swarm_active is not defined

- name: Docker Swarm | generate token (and saving it)
  docker_swarm_info:
    nodes: yes
  register: swarm_info
  run_once: true

- name: Docker Swarm | Define swarm manager
  docker_swarm:
    state: join
    debug: yes
    remote_addrs: "{{ hostvars[groups.docker-manager[0]] }}"
    join_token: "{{ swarm_info.swarm_facts.JoinTokens.Manager }}"
    advertise_addr: "{{ swarm_manager_ip }}"
  when: swarm_master is defined and swarm_master|bool == True

- name: Docker Swarm | Adding swarm workers
  docker_swarm:
    state: join
    remote_addrs: "{{ hostvars[groups.docker-worker[0]] }}"
    join_token: "{{ swarm_info.swarm_facts.JoinTokens.Worker }}"
    advertise_addr: "{{ swarm_manager_ip }}"
  when: ansible_default_ipv4.address != {{ swarm_manager_ip }}
