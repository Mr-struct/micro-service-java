---

- name: SDK Python | Install prerequisites
  apt: 
    name: 
      - python-pip
      - python3-pip
    state: latest
    update_cache: yes
  ignore_errors: yes
  register: result

- name: Debug | Install prerequisites SDK
  debug: var=result verbosity=1

- name: Docker SDK | install docker (python)
  pip:
    name: docker
  register: result

- name: Debug | SDK - install docker (python)
  debug: var=result verbosity=1

- name: Docker | Check for Swarm
  docker_swarm_info:
    nodes: yes
  register: swarm_info
  ignore_errors: yes
  when: ansible_default_ipv4.address == swarm_manager_ip

- name: Debug | Docker - Check for Swarm
  debug: var=swarm_info verbosity=1

- name: Inform about basic flags
  debug:
    msg: |
      Was able to talk to docker daemon: {{ swarm_info.can_talk_to_docker }}
      Docker in Swarm mode: {{ swarm_info.docker_swarm_active }}
      This is a Manager node: {{ swarm_info.docker_swarm_manager }}
  when: ansible_default_ipv4.address == swarm_manager_ip

- name: Debug | Ansible default ip address
  debug: var=ansible_default_ipv4.address verbosity=1

- name: Docker | set Swarm on
  docker_swarm:
    state: present
    debug: yes
  when: ansible_default_ipv4.address == swarm_manager_ip and swarm_info.docker_swarm_active == false

- name: Docker Swarm | recover token (and saving it)
  docker_swarm_info:
    nodes: yes
  register: swarm_join
  when: ansible_default_ipv4.address == swarm_manager_ip

- name: Debug | Docker - Check for Swarm
  debug: var=hostvars[groups['dockermanager'][0]].swarm_join verbosity=1

- name: Docker Swarm | Adding swarm workers
  docker_swarm:
    state: join
    remote_addrs: "{{ swarm_manager_ip }}"
    join_token: "{{ hostvars[groups['dockermanager'][0]].swarm_join.swarm_facts.JoinTokens.Worker }}"
    advertise_addr: "{{ ansible_default_ipv4.address }}"
  when: "(ansible_default_ipv4.address != swarm_manager_ip)"
